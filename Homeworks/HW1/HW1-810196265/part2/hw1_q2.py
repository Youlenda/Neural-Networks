# -*- coding: utf-8 -*-
"""hw1-q2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xgBVkEwcSTn_tG84IihI0mCXYfwke35_
"""

import numpy as np


x1 =  2 + 0.5 * np.random.randn(100, 1)
y1 =  0 + 0.2 * np.random.randn(100, 1)
xi1 = np.concatenate((x1, y1), axis = 1)

x2 =  0 + 0.1 * np.random.randn(30, 1)
y2 = -1 + 0.7 * np.random.randn(30, 1)
xi2 = np.concatenate((x2, y2), axis = 1)

xi = np.concatenate((xi1, xi2), axis = 0)
 
target = np.concatenate((np.ones((1, 100)), -1*np.ones((1, 30))), axis=1)
target = np.squeeze(target)

#xi.shape
#xi1, xi2 ,xi
#target.shape, target

w = np.zeros(2)
b = 0
alfa = 0.09
errors = np.zeros((130))

#w, wp, b, alfa, errors

for epochs in range (0,130,1):
  for i in range(0, 130, 1):
    net = np.matmul(w, xi[i]) + b
    errors[i] = 0.5 * ((target[i] - net)**2)
    for j in range(0, 2, 1):
      w[j] = w[j] + alfa * (target[i] - net)*xi[i, j]
    b = b +  alfa * target[i] - net
 
print("Weights = ",w,", Bias = ",b)

import matplotlib.pyplot as plt
epochs = np.arange(1,131)
plt.figure(0)
plt.plot(epochs, errors, 'cyan')
plt.xlabel('Epochs')
plt.ylabel('Errors')
plt.show()

x_line = np.arange(-0.5, 2)
y_line = (-b - w[0] * x_line)/w[1]
plt.figure(1)
plt.plot(xi[target == -1, 0], xi[target == -1, 1], 'ro')
plt.plot(xi[target ==  1, 0], xi[target ==  1, 1], 'bo')
plt.xlabel('x')
plt.ylabel('y')
plt.plot(x_line, y_line, 'green')
plt.show()