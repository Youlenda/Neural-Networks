# -*- coding: utf-8 -*-
"""hw1-q1-a.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FN-T6TNlqF1KCfI40f9gSajF1MViSzNw
"""

#upload csv file from google drive
import pandas as pd
url = '/content/HW1_Q1_data.csv'
dataset = pd.read_csv(url)

#dataset

import numpy as np
x = dataset.drop(columns = 'flower')
x = x.values
y = dataset['flower'].values

#x.shape, x, y

target = np.where(y == 'Iris-setosa', 1, -1)
target = np.reshape(target, (100,1))

#target.shape, target

import numpy as np
w = np.zeros([1, 2])
b = 0
threshold = 0.3
alfa = 0.6
predict = np.zeros([100, 1])
net = np.zeros([100, 1])
epochs = 0
errors = np.ones([100,1])

w,b

i=0
for epochs in range (10):
  for i in range(100):
    net = np.matmul(w, x[i,:])+ b
    if net > threshold:
      predict = 1
    elif  net < threshold:
      predict = -1
    else:
      predict = 0
    errors[i] = abs(predict-target[i]) 
    if errors[i]!=0: 
      w   =  w + alfa * x[i,:] * target[i]
      b   =  b + alfa * target[i]
      
print("Weights = ",w,", Bias = ",b)

x1_line = np.arange(3.5,8.5)
x2_line1 = (-b - w[0,0] * x1_line)/w[0,1]
x2_line2 = (-b - w[0,0] * x1_line + threshold)/w[0,1]
x2_line3 = (-b - w[0,0] * x1_line - threshold)/w[0,1]

#x1_line

import matplotlib.pyplot as plt
plt.scatter(x[:50, 0], x[:50, 1], color='red', marker='o', label='Iris-setosa')
plt.scatter(x[50:100, 0], x[50:100, 1], color='blue', marker='x', label='Iris-versicolor')
plt.plot(x1_line,x2_line1,'c--')
plt.plot(x1_line,x2_line2,'orange')
plt.plot(x1_line,x2_line3,'orange')
plt.xlabel('petal length (cm)')
plt.ylabel('sepal length (cm)')
plt.legend(loc='upper left')
plt.show()